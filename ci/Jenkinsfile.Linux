pipeline {
    agent any
    environment {
        PKG_CONFIG_PATH = """${sh(
	        returnStdout: true,
	        script: 'echo "$(pwd)/ext/linux/lib/pkgconfig:${PKG_CONFIG_PATH}"'
	     )}"""
    }
    stages {
        stage('init dependencies') {
            steps {
                sh 'git submodule update --init'
            }
        }
        stage('build dependencies') {
            steps {
                sh 'cd ext; mkdir -vp linux'
                sh 'cd ext/libgpg-error; ./autogen.sh; ./configure --enable-static --disable-shared  --disable-doc --prefix=$(pwd)/../linux --enable-install-gpg-error-config; make; make install'
                sh 'cd ext/libassuan; ./autogen.sh; ./configure --enable-static --disable-shared  --disable-doc --prefix=$(pwd)/../linux --with-libgpg-error-prefix=$(pwd)/../linux; make; make install'
                sh 'cd ext/gpgme; ./autogen.sh; ./configure --enable-static --disable-shared --enable-languages=cpp --disable-gpgsm-test --disable-g13-test --disable-gpg-test --disable-gpgconf-test --with-pic --with-libassuan-prefix=$(pwd)/../linux  --with-libgpg-error-prefix=$(pwd)/../linux  --prefix=$(pwd)/../linux; make; make install'
                sh 'cd ext/cryptopp; make -f GNUmakefile; PREFIX="../linux" make -f GNUmakefile install'
            }
        }
        stage('mk cpp') {
            steps {
                sh 'cd build; ./mk_cpp.sh'
            }
        }
        stage('cmake') {
            steps {
                sh 'cd build; rm -rf CMakeCache.txt CMakeFiles'
                sh 'cd build; cmake -DCMAKE_BUILD_TYPE=Debug .'
            }
        }
        stage('compile') {
            steps {
                sh 'cd build; make'
            }
        }
        stage('unit tests') {
            steps {
                sh 'cd build; ./ut.sh'
            }
        }
    }
}
